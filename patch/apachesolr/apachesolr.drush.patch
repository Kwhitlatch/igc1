Index: sites/all/modules/apachesolr/drush/apachesolr.drush.inc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- sites/all/modules/apachesolr/drush/apachesolr.drush.inc	(revision dab5d8f2285d15f38603558a9b115a4b4c40da6b)
+++ sites/all/modules/apachesolr/drush/apachesolr.drush.inc	(revision )
@@ -668,7 +668,8 @@
  * Go through the process of indexing one entity.
  */
 function drush_apachesolr_solr_index_entity($entity_id) {
+    $start = microtime(TRUE);
-  $verbose = drush_get_context('DRUSH_VERBOSE');
+    $verbose = drush_get_context('DRUSH_VERBOSE');
 
   $entity_type = drush_get_option('entity_type', 'node');
 
@@ -707,7 +708,7 @@
     if (is_array($status_callbacks)) {
       foreach ($status_callbacks as $status_callback) {
         if (is_callable($status_callback)) {
-          $status = $status_callback($id, $type, $entity);
+          $status = $status_callback($id, $entity_type, $entity);
           if (!$status) {
             drush_set_error("Reason: $status_callback function says the entity should not be indexed.");
           }
@@ -726,12 +727,28 @@
   $env_id = apachesolr_default_environment();
   $documents = apachesolr_index_entity_to_documents($item, $env_id);
 
+    $end = microtime(TRUE);
+
+    $took = ($end - $start);
+    $took = sprintf('%.6f', $took);
+    echo "Converting drupal node ID: " . $entity_id . " into " . number_format(count($documents)) . " solr documents took " . number_format($took,2) . " seconds\n";
+
-  if ($verbose) {
+    if ($verbose) {
     drush_print_r($documents);
   }
+    $start = microtime(TRUE);
 
+
+
-  $indexed = apachesolr_index_send_to_solr($env_id, $documents);
+    $indexed = apachesolr_index_send_to_solr($env_id, $documents);
+
+    $end = microtime(TRUE);
+    $took = ($end - $start);
+    $took = sprintf('%.6f', $took);
+    echo "Indexing " . number_format(count($documents)) . " solr documents took " . number_format($took,2) . " seconds\n\n";
+
+
-  $solr = apachesolr_get_solr($env_id);
+    $solr = apachesolr_get_solr($env_id);
   // If there is no server available, don't continue.
   if (!$solr->ping()) {
     throw new Exception(t('No Solr instance available during indexing.'));
