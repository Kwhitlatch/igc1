{"version":3,"sources":["adaptive-background.js"],"names":["$","DATA_COLOR","DATA_PARENT","DATA_CSS_BG","EVENT_CF","DEFAULTS","selector","parent","exclude","normalizeTextColor","normalizedTextColors","light","dark","lumaClasses","n","t","document","createElement","getContext","e","a","Image","o","src","substring","crossOrigin","onload","drawImage","getImageData","width","height","data","join","map","name","r","i","c","colors","u","paletteSize","length","m","s","d","f","dominant","count","palette","Array","apply","Boolean","l","indexOf","g","some","success","p","secondary","RGBaster","window","adaptiveBackground","run","options","opts","extend","each","index","el","$this","this","handleColors","img","useCSSBackground","getCSSBackground","attr","trigger","color","str","css","regex","match","exec","replace","on","ev","$parent","parents","backgroundColor","getYIQ","rgb","getNormalizedTextColor","getLumaClass","addClass","jQuery"],"mappings":"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","file":"../adaptive-background.js","sourcesContent":["\n/* jshint debug: true, expr: true */\n\n;(function($){\n\n  /* Constants & defaults. */\n  var DATA_COLOR    = 'data-ab-color';\n  var DATA_PARENT   = 'data-ab-parent';\n  var DATA_CSS_BG   = 'data-ab-css-background';\n  var EVENT_CF      = 'ab-color-found';\n\n  var DEFAULTS      = {\n    selector:             '[data-adaptive-background]',\n    parent:               null,\n    exclude:              [ 'rgb(0,0,0)', 'rgb(255,255,255)' ],\n    normalizeTextColor:   false,\n    normalizedTextColors:  {\n      light:      \"#fff\",\n      dark:       \"#000\"\n    },\n    lumaClasses:  {\n      light:      \"ab-light\",\n      dark:       \"ab-dark\"\n    }\n  };\n\n  // Include RGBaster - https://github.com/briangonzalez/rgbaster.js\n  /* jshint ignore:start */\n  !function(n){\"use strict\";var t=function(){return document.createElement(\"canvas\").getContext(\"2d\")},e=function(n,e){var a=new Image,o=n.src||n;\"data:\"!==o.substring(0,5)&&(a.crossOrigin=\"Anonymous\"),a.onload=function(){var n=t(\"2d\");n.drawImage(a,0,0);var o=n.getImageData(0,0,a.width,a.height);e&&e(o.data)},a.src=o},a=function(n){return[\"rgb(\",n,\")\"].join(\"\")},o=function(n){return n.map(function(n){return a(n.name)})},r=5,i=10,c={};c.colors=function(n,t){t=t||{};var c=t.exclude||[],u=t.paletteSize||i;e(n,function(e){for(var i=n.width*n.height||e.length,m={},s=\"\",d=[],f={dominant:{name:\"\",count:0},palette:Array.apply(null,new Array(u)).map(Boolean).map(function(){return{name:\"0,0,0\",count:0}})},l=0;i>l;){if(d[0]=e[l],d[1]=e[l+1],d[2]=e[l+2],s=d.join(\",\"),m[s]=s in m?m[s]+1:1,-1===c.indexOf(a(s))){var g=m[s];g>f.dominant.count?(f.dominant.name=s,f.dominant.count=g):f.palette.some(function(n){return g>n.count?(n.name=s,n.count=g,!0):void 0})}l+=4*r}if(t.success){var p=o(f.palette);t.success({dominant:a(f.dominant.name),secondary:p[0],palette:p})}})},n.RGBaster=n.RGBaster||c}(window);\n  /* jshint ignore:end */\n\n\n  /*\n    Our main function declaration.\n  */\n  $.adaptiveBackground = {\n    run: function( options ){\n      var opts = $.extend({}, DEFAULTS, options);\n\n      /* Loop over each element, waiting for it to load\n         then finding its color, and triggering the\n         color found event when color has been found.\n      */\n      $( opts.selector ).each(function(index, el){\n        var $this = $(this);\n\n        /*  Small helper functions which applies\n            colors, attrs, triggers events, etc.\n        */\n        var handleColors = function () {\n          var img = useCSSBackground() ? getCSSBackground() : $this[0];\n\n          RGBaster.colors(img, {\n            paletteSize: 20,\n            exclude: opts.exclude,\n            success: function(colors) {\n              $this.attr(DATA_COLOR, colors.dominant);\n              $this.trigger(EVENT_CF, { color: colors.dominant, palette: colors.palette });\n            }\n          });\n\n        };\n\n        var useCSSBackground = function(){\n          var attr = $this.attr( DATA_CSS_BG );\n          return (typeof attr !== typeof undefined && attr !== false);\n        };\n\n        var getCSSBackground = function(){\n          var str = $this.css('background-image');\n          var regex = /\\(([^)]+)\\)/;\n          var match = regex.exec(str)[1].replace(/\"/g, '')\n          return match;\n        };\n\n        /* Subscribe to our color-found event. */\n        $this.on( EVENT_CF, function(ev, data){\n\n          // Try to find the parent.\n          var $parent;\n          if ( opts.parent && $this.parents( opts.parent ).length ) {\n            $parent = $this.parents( opts.parent );\n          }\n          else if ( $this.attr( DATA_PARENT ) && $this.parents( $this.attr( DATA_PARENT ) ).length ){\n            $parent = $this.parents( $this.attr( DATA_PARENT ) );\n          }\n          else if ( useCSSBackground() ){\n            $parent = $this;\n          }\n          else if (opts.parent) {\n            $parent = $this.parents( opts.parent );\n          }\n          else {\n            $parent = $this.parent();\n          }\n\n          $parent.css({ backgroundColor: data.color });\n\n          // Helper function to calculate yiq - http://en.wikipedia.org/wiki/YIQ\n          var getYIQ = function(color){\n            var rgb = color.match(/\\d+/g);\n            return ((rgb[0]*299)+(rgb[1]*587)+(rgb[2]*114))/1000;\n          };\n\n          var getNormalizedTextColor = function (color){\n            return getYIQ(color) >= 128 ? opts.normalizedTextColors.dark : opts.normalizedTextColors.light;\n          };\n\n          var getLumaClass = function (color){\n            return getYIQ(color) <= 128 ? opts.lumaClasses.dark : opts.lumaClasses.light;\n          };\n\n          // Normalize the text color based on luminance.\n          if ( opts.normalizeTextColor )\n            $parent.css({ color: getNormalizedTextColor(data.color) });\n\n          // Add a class based on luminance.\n          $parent.addClass( getLumaClass(data.color) )\n                 .attr('data-ab-yaq', getYIQ(data.color));\n\n          opts.success && opts.success($this, data);\n        });\n\n        /* Handle the colors. */\n        handleColors();\n\n      });\n    }\n  };\n\n})(jQuery);\n"]}